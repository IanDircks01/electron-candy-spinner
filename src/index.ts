import { app, BrowserWindow, globalShortcut } from 'electron';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

const CLI_ARGS = process.argv.splice(2);
const DEV_MODE = !(CLI_ARGS.find((arg) => arg.toLocaleLowerCase() == 'dev') == undefined);

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

const createWindow = (): void => {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    height: 1080,
    width: 1920,
    fullscreen: !DEV_MODE,
    titleBarStyle: DEV_MODE ? 'default' : 'hidden',
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      devTools: DEV_MODE
    },
  });

  const spin = (): void => {
    mainWindow.webContents.send('spin-info', {
      seed: generateSpin(),
    });
  };

  globalShortcut.register('S', () => {
    spin();
  });

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Open the DevTools.
  if (DEV_MODE) mainWindow.webContents.openDevTools();
};

const generateSpin = (): number => {
  const number = Math.floor(Math.random() * 1000);

  return number;
};

app.on('ready', () => {

  globalShortcut.register('Esc', () => {
    app.quit();
  });

  globalShortcut.register('R', () => {
    app.relaunch();
    app.quit();
  });

  createWindow();
});

app.on('will-quit', () => {
  globalShortcut.unregisterAll();
});